import pandas as pd
import numpy as np
import os
import re
from nameseer import NameClassifier
import streamlit as st
from stqdm import stqdm
stqdm.pandas()

def anti_join(df1,df2):
    outer = df1.merge(df2, how='outer', indicator=True)
    return outer[(outer._merge=='left_only')].drop('_merge', axis=1)

ord_all_options = ['(นาย|นาง).*โดย', '^.?MIS', '^.?MISS', 'MISS ', 'MISSนาย', 'MRS','MRS\\.',
   '^.?MR\\.',"MR\\s", 'MS\\.', 'MS\\. ', '^.(.)?(นาย|นาง)', '^.?.?(นาย|นาง)',
   '^.?.?นาง', '^.?.?นาย', '^.?คุณ', '^.?พัน', '^.?ร้อย', '^.?เรือ',
   '^นาง', '^นาย', 'กองทุนส่วนบุคคล', 'กองทุนส่วนบุคคุล', 'คณะ',
   '^.?คุณ', '^.?จ\\.ส\\.', '^.?จ\\.อ\\.', '^.?จ\\.อ\\.', 'จ่า', '^.?ด\\.ช', '^.?ด\\.ญ',
   '^.?ด\\.ต', '^.?ดร\\.', 'ดาบ', 'ด็อกเตอร์', 'ทันตแพทย์', '^.?น\\.ต','นส\\.',
   '^.?น\\.ท', '^.?น\\.พ', '^.?น\\.ส', '^.?น\\.ส\\', '^.?น\\.ส\\.', '^.?น\\.อ', '^.?นพ\\.',
   'นาง ', 'นางสาว', 'นางสาว ', 'นาย ', 'นายแพท',
   'นาวา', 'ผศ\\.', 'ผู้', '^.?พ\\.จ', 'พ\\.ญ', 'พ\\.ต', 'พ\\.ต\\.',
   '^.?พ\\.ท', '^.?พ\\.อ', '^.?พล\\.', '^.?พลต', '^.?พลอากา', '^.?พลอากาศ',
   'พลอากาศเอก', '^.?พลเ', '^.?พลเอ', '^.?พลโ', '^.?ม\\.ร', '^.?ม\\.ล', '^.?ร\\.ต',
   '^.?ร\\.ต', '^.?ร\\.ท', '^.?ร\\.อ', '^.?รศ\\.', 'รอง', 'รอง ', 'รอง\\s',
   '^.?ร้อย', '^.?ร้อยตร', '^.?ร้อยตรคณะ', '^.?ร้อยเอ', '^.?ร้อยโ', '^.?วท\\.ร\\.',
   '^.?ว่าที่', 'ศาสตราจารย์', '^.?ส\\.ต', '^.?ส\\.ท\\.', '^.?ส\\.อ', '^.?สาว',
   '^.?สิบ', 'หม่อมราชวง', 'หม่อมหลวง', 'เกตุ', 'เด็ก',
   'แพทย์หญิง', 'โดยบมจ','\\(นาง','\\(นาย','ดอกเตอร์']

firm_all_options = ['(กรุงเทพ)', '(ประเทศไทย)', '(มหาชน)', '(เอเชีย)', '(ไทย)',
        '(ไทยแลนด์)', 'BANK', 'BHD', 'CO.', 'COPO', 'CORP', 'CO\\.','FUND', 'GLOBAL', 'GPH', 'LC', 'LIMITED',
        'BRANCH','HOLD','SERVICE','TRUST','ประกัน','โรงพย','คอปอร์เร','เจริญโภคภัณฑ์','อิน.*ชัน','อิน.*ชั่น','โรงงา','ธนาคาร',
        'LLC', 'LTD', 'NOMINEES','PTE', 'SDN', 'SECURITIES', 'SINGAPORE', 'กฎหมาย', 'กราฟฟิค','กรีน', 'กรุ๊ป','ดีเวล',
        'กลาส', 'กลุ่ม', 'กอ.*ท.?น', 'กองทุน', 'กอล์ฟ','การก่อสร้าง', 'การค้า', 'การช่าง', 'การบัญชี', 'การพิมพ์','ห้องเย',
        'การาจ', 'การเกษตร', 'การโยธา', 'การไฟฟ้า', 'การ์ด', 'การ์เด้น','การ์เด้นท์', 'การ์เมนท์', 'การ์เม้นท์', 'กู๊ด', 'ก่อสร้าง',
        'ขนส่ง', 'ครอป', 'คราฟท์', 'ครีเอชั่น', 'ครีเอท', 'ครีเอทีฟ','คลับ', 'คลาวด์', 'คลินิก', 'คลีน', 'คลีนนิ่ง', 'ควอลิตี้','คอน.*ซัล',
        'คอนกรีต', 'คอนซัลติ้ง', 'คอนซัลท์', 'คอนซัลแตนท์','คอนซัลแทนซี่', 'คอนซัลแทนต์', 'คอนซัลแทนท์', 'คอนซัลแทนส์',
        'คอนวีเนี่ยนสโตร์', 'คอนสตรัค', 'คอนสตรัคชั่น', 'คอนสตรั๊คชั่น','คอนสทรัคชั่น', 'คอนเทนเนอร์', 'คอนเนคชั่น', 'คอนเน็คชั่น',
        'คอนแทรคเตอร์', 'คอนโด', 'คอนโดมิเนียม', 'คอนโทรล', 'คอฟฟี่','คอม.*นี', 'คอมปะ', 'คอมปะนี', 'คอมปา', 'คอมพิวเตอร์',
        'คอมมิวนิเคชั่น', 'คอมมูนิเคชั่น', 'คอมเพล็กซ์', 'คอมเมอร์เชียล','คอมเมิร์ซ', 'คอมโพ', 'คอร์ป', 'คอร์ปอร์เรชั่น', 'คอร์ปอเรชั่น',
        'คอร์ปอเรชั้น', 'คอร์ปอเรท', 'คอร์เปอร์เรชั่น', 'คอร์เปอเรชั่น','คอลเลคชั่น', 'คอสเมติก', 'คอสเมติกส์', 'คัมปะนี', 'คัมพานี',
        'คัมพานีแมเนจ', 'คัลเลอร์', 'คาร์', 'คาร์เร้นท์', 'คาร์โก้','คาเฟ่', 'คิทเช่น', 'ค้าวัสดุ', 'ค้าไม้', 'จัดหางาน', 'จำกัด',
        'จิวเวลรี่', 'จิเอ็มบีเอช', 'จี เอ็ม บี เอชนอมีนี', 'จีเอ็มบีเอช','ชิปปิ้ง', 'ช็อป', 'ซอฟต์แวร์', 'ซอฟท์แวร์', 'ซัคเซส', 'ซัพพลาย',
        'ซัพพลายส์', 'ซัพพลายเออร์', 'ซัพพอร์ต', 'ซัพพอร์ท', 'ซาวด์','ซิตี้', 'ซิลเวอร์', 'ซิสเต.*ม', 'ซิสเต็ม', 'ซิสเต็มส์', 'ซิสเทม',
        'ซิสเท็ม', 'ซิสเท็มส์', 'ซีฟู้ด', 'ซีวิล', 'ซีสเต็ม','ซีเคียวริตี้', 'ซึ่งจดทะเบียนแล้ว', 'ซุปเปอร์', 'ซุปเปอร์โปร','พลังงา',
        'ดอท', 'ดาต้า', 'ดิจิตอล', 'ดิจิทัล', 'ดิสทริบิวชั่น','ดิสทริบิวเตอร์', 'ดิเวลลอปเม้นท์', 'ดีซายน์', 'ดีเวลลอป','ผลิตภัณฑ์',
        'ดีเวลลอปเมนท์', 'ดีเวลลอปเม้นท์', 'ดีเวลล็อปเม้นท์','ดีเวลอปเมนท์', 'ดีเวลอปเม้นท์', 'ดีไซน์', 'ทนายความ', 'ทรัพย์ทวี',
        'ทรานสปอ', 'ทรานสปอร์ต', 'ทรานสปอร์ท', 'ทรานส์', 'ทราฟฟิค','ทราเวล', 'ทราเวิล', 'ทะเบียน', 'ทัวร์', 'ทาวเวอร์', 'ทิสโก้',
        'ทีม', 'ทูลลิ่ง', 'ทูลส', 'ทูลส์', 'ธุรกิจ', 'นอมีนี','นำคนต่างด้าวมาทำงานในประเทศ', 'นิตติ้ง', 'นิปปอน', 'บจ','บริวเวอ',
        'บจ\\.บริษัท', 'บจก', 'บมจ', 'บมจ\\.บริษัท', 'บรรจุภัณฑ์','บริการ', 'บริษัท', 'บริษํท', 'บลจ', 'บางกอก', 'บาร์', 'บิซิเนส',
        'บิลดิ้ง', 'บิลเดอร์', 'บิวดิ้ง', 'บิวตี้', 'บิวเดอร์', 'บิสซิเนส','บิสสิเนส', 'บิสิเนส', 'บี.วี', 'บี\\.วี', 'บี\\.วีกลุ่ม', 'บีช',
        'บีเอชดี', 'บ้าน', 'ปักกิ่ง', 'ปาร์ค', 'ปาล์ม', 'ปิโตรเลียม','ปิโตรเลี่ยม', 'พรอพเพอร์ตี้', 'พริ้นติ้ง', 'พริ้นท์', 'พรีซิชั่น',
        'พร็อพ', 'พร็อพเพอร์ตี้', 'พร็อพเพอร์ตี้ส์', 'พร๊อพเพอร์ตี้','พลัส', 'พลาซ่า', 'พลาสติก', 'พัฒนา', 'พัฒนาอิสลาม', 'พับลิชชิ่ง',
        'พาณิชย์', 'พาราวู้ด', 'พาราไดซ์', 'พาร์ค', 'พาร์ท', 'พาร์ทเนอ','พาร์ทเนอร์', 'พาร์ทเนอร์ส', 'พาวเวอร์', 'พีทีวาย', 'พีทีอี',
        'พีแอลซี', 'ฟรุ๊ต', 'ฟอร์เวิร์ด', 'ฟาร์ม', 'ฟาร์มา', 'ฟิตเนส','ฟิล์ม', 'ฟูดส์', 'ฟู้ด', 'ฟู้ดส์', 'ฟู๊ด', 'ฟู๊ดส์', 'มอเตอ',
        'มอเตอร์', 'มันนี่', 'มัลติมีเดีย', 'มา.*เกต', 'มาร์ท', 'มาร์เก็ต','มาร์เก็ตติ้ง', 'มาสเตอร์', 'มิวสิค', 'มิสเตอร์', 'มีเดีย',
        'มุลนิธิ', 'มุลนิธิจีเอ็มบีเอช', 'มูลนิธิ', 'ยูนิเวอร์แซล','ยูเนี่ยน', 'ยูไนเต็ด', 'รักษาความปลอดภัย', 'รับเบอร์','แลบบอ','แฟบริ',
        'รีซอร์สเซส', 'รีสอร์ท', 'รีเทล', 'รีเสิร์ช', 'รีไซเคิล', 'ร้าน','ลอนดรี้', 'ลอว์', 'ลิงค์', 'ลิซซิ่ง', 'ลิฟวิ่ง', 'ลิมิเด็ด',
        'ลิมิเต็ด', 'ลิสซิ่ง', 'ลีดเดอร์', 'ลีฟวิ่ง', 'ลีสซิ่ง', 'วอเตอร์','วัสดุก่อสร้าง', 'วัสดุภัณฑ์', 'วิชั่น', 'วิลล่า', 'วิลล่าส์',
        'วิลเลจ', 'วิศวกรรม', 'วู้ด', 'วู๊ด', 'ส\\.', 'สกิน', 'สตีล','สตูดิโอ', 'สถาปนิก', 'สปอร์ต', 'สปา', 'สมาคม', 'สมาร์ท', 'สยาม',
        'สยาม ', 'สำนักกฎหมาย', 'สำนักงาน', 'สเตชั่น', 'สเตนเลส', 'สเปซ','สแควร์', 'สแตนดาร์ด', 'สแตนเลส', 'สโตน', 'สโตร์', 'สไตล์', 'หจ',
        'หจ\\.', 'หจ\\.ห้างหุ้นส่วนจำกัด', 'หมู่', 'หลักทรัพ', 'หส\\.','หส\\.ห้างหุ้นส่วนสามัญ', 'หุ้น', 'ห้าง', 'ห้างทอง',
        'ห้างทองเยาวราช', 'ห้างหุ้นส่วนจำกัด', 'ห้างหุ้นส่วนสามัญ','อพาร์ทเมนท์', 'อพาร์ทเม้นท์', 'อลูมินั่ม', 'อลูมิเนียม', 'ออดิท',
        'ออดิทติ้ง', 'ออดิโอ', 'ออนไลน์', 'ออฟฟิศ', 'ออยล์', 'ออร์แกนิค','ออโต', 'ออโตเมชั่น', 'ออโตโมทีฟ', 'ออโตโมบิล', 'ออโต้',
        'ออโต้คาร์', 'ออโต้พาร์ท', 'ออโต้เซอร์วิส', 'อะโกร', 'อะไหล่ยนต์','อันดามัน', 'อาร์คิเทค', 'อาร์ต', 'อาร์ท', 'อิควิปเม้นท์', 'อิงค์',
        'อิงส์', 'อินชัวรันส์', 'อินดัสตรี', 'อินดัสตรีส์', 'อินดัสตรี้','อินดัสทรี', 'อินดัสทรีส์', 'อินดัสทรี่', 'อินดัสเตรียล',
        'อินดัสเทรียล', 'อินทิเกรชั่น', 'อินทีเรีย', 'อินฟอร์เมชั่น','อินสไปร์', 'อินเตอ', 'อินเตอร์', 'อินเตอร์กรุ๊ป', 'อินเตอร์ฟู้ด',
        'อินเตอร์เทค', 'อินเตอร์เทรด', 'อินเตอร์เทรดดิ้ง','อินเตอร์เนชันแนล', 'อินเตอร์เนชั่นแนล', 'อินเทลลิเจนท์', 'อินเวส',
        'อินโนเทค', 'อินโนเวชั่น', 'อินโนเวทีฟ', 'อิมปอร์ต','อิมปอร์ต-เอ็กซ์ปอร์ต', 'อิมพอร์ต', 'อิมพอร์ท', 'อิมเมจ',
        'อิเลคทริค', 'อิเล็กทรอนิกส์', 'อิเล็คทริค', 'อิ้งค์','อีควิปเมนท์', 'อีควิปเม้นท์', 'อีสเทิร์น', 'อีเนอจี้','แอ็คเค้า','อีเลค','อิเลค',
        'อีเลคทริค', 'อีเล็คทริค', 'อีเว้นท์', 'อุตสาหกรรม', 'อโกร','ฮอนดา', 'ฮอนด้า', 'ฮับ', 'ฮาร์ดแวร์', 'ฮ่องกง', 'เคมิคอล',
        'เคมิคัล', 'เคมีคอล', 'เครน', 'เจนเนอรัล', 'เจริญยนต์', 'เจเนอรัล','เจแปน', 'เซนเตอร์', 'เซฟตี้', 'เซรามิค', 'เซล', 'เซลล์', 'เซลส์',
        'เซอ.*วิส', 'เซอร์วิส', 'เซอร์วิสเซส', 'เซอร์เวย์', 'เซิร์ฟ','เซเว่น', 'เซ็นทรัล', 'เซ็นเตอ', 'เซ็นเตอร์', 'เดคคอร์',
        'เดคคอเรชั่น', 'เดคอร์', 'เดอะ', 'เทค', 'เทคนิ', 'เทคนิค','เทคนิคอล', 'เทคโน', 'เทคโนโลยี', 'เทคโนโลยีส์', 'เทคโนโลยี่',
        'เทรด', 'เทรดดิ้ง', 'เทรนนิ่ง', 'เทศบาล', 'เทเลคอม', 'เนเจอร์','เนเชอรัล', 'เน็ตเวิร์ค', 'เน็ทเวิร์ค', 'เบฟเวอเรจ', 'เบย์',
        'เบอเกอ', 'เบเกอรี', 'เบเกอรี่', 'เปเปอร์', 'เพลส', 'เพาเวอร์','เพ็ท', 'เพ้นท์', 'เฟรช', 'เฟอร์นิเจอร์', 'เภสัช', 'เมคเกอร์',
        'เมดดิคอล', 'เมดิคอล', 'เมททอล', 'เมทัล', 'เมทัลชีท','เมนเทนแนนซ์', 'เมอร์ชั่น', 'เมเนจเมนท์', 'เมเนจเม้นท์', 'เยาวราช',
        'เรดิโอ', 'เรสซิเดนซ์', 'เรสซิเด้นซ์', 'เรสเตอรองท์', 'เรียล','เรียลเอสเตท', 'เลิร์นนิ่ง', 'เลเซอร์', 'เวนเจอ', 'เวนเจอร์',
        'เวนเจอร์ส', 'เวลดิ้ง', 'เวลท์', 'เวลธ์', 'เวลเนส', 'เวิร์ค','เวิลด์', 'เวิลด์ไวด์', 'เอ.*จิเนีย', 'เอ.*เตอ', 'เอนจิเนียริ่ง',
        'เอนเตอร์ไพรส์', 'เอนเนอ', 'เอนเนอร์จี', 'เอนเนอร์ยี่','เอสดีเอ็น', 'เอสเตท', 'เอเจนซี่', 'เอเชีย', 'เอเซีย',
        'เอเซียNOMINEES','NOMINEES', 'เอเนเจีย', 'เอเยนซี่', 'เอ็กซ์ปอร์ต','เอ็กซ์พอร์ต', 'เอ็กซ์พอร์ท', 'เอ็กซ์เชนจ์', 'เอ็กซ์เพรส',
        'เอ็กซ์เพิร์ท', 'เอ็ดดูเคชั่น', 'เอ็นจิเนีย', 'เอ็นจิเนียริ่ง','เอ็นจิเนียร์', 'เอ็นจิเนียร์ริ่ง', 'เอ็นจีเนียริ่ง',
        'เอ็นเตอร์เทนเมนท์', 'เอ็นเตอร์เทนเม้นท์', 'เอ็นเตอร์ไพรซ์','เอ็นเตอร์ไพรส์', 'เอ็นเตอร์ไพรส์เซส', 'เอ็นเตอร์ไพร์ส', 'เอ็นเนอ',
        'เอ็นเนอร์จี', 'เอ็นเนอร์ยี', 'เอ็นเนอร์ยี่', 'เอ็ม\\.บี','เอ็มบี', 'เอ็มบีเอช', 'เอ็มไพร์', 'เฮลตี้', 'เฮลท์', 'เฮลท์ตี้',
        'เฮลท์แคร์', 'เฮลธ์', 'เฮอริเทจ', 'เฮาส', 'เฮาส์', 'เฮิร์บ','เฮ้าส์', 'เฮ้าส์ซิ่ง', 'แกลเลอรี่', 'แก๊ส', 'แค(บ|ป).*ตอล',
        'แคปปิตอล', 'แคร์', 'แทรคเตอร์', 'แทรเวล', 'แทรเวิล', 'แบรนด์','แปซิฟิก', 'แปซิฟิค', 'แพคเกจจิ้ง', 'แพลนท์', 'แพลนนิ่ง',
        'แพลนเนอร์', 'แพ็คกิ้ง', 'แพ็คเกจจิ้ง', 'แฟคตอรี่', 'แฟคทอรี่','แฟชั่น', 'แฟบริค', 'แฟมิลี่', 'แมชชินเนอรี่', 'แมชชีน',
        'แมชชีนเนอรี่', 'แมทที', 'แมททีเรียล', 'แมนชั่น', 'แมนู','แมนูแฟคเจอริ่ง', 'แมนเนจเมนท์', 'แมนเนจเม้นท์', 'แมเนจ',
        'แมเนจเมนท์', 'แมเนจเม้นท์', 'แลนด์', 'แลนด์สเคป', 'แลป', 'แล็บ','แอ.*เซท', 'แอคเคาท์', 'แอคเคาท์ติ้ง', 'แอคเคาน์ติ้ง', 'แอดวานซ์',
        'แอดเวอร์ไทซิ่ง', 'แอดไวซอรี่', 'แอดไวซ์', 'แอดไวเซอรี่', 'แอนด์','แอพพาเรล', 'แอร์', 'แอล.*พี', 'แอล.+ซี', 'แอลซี', 'แอลทีดี',
        'แอลพีจี', 'แอลเอซี', 'แอลแอลซี', 'แอสเซท', 'แอสเซ็ท', 'แอสเสท','แอสโซซิเอท', 'แอสโซซิเอทส์', 'แอ๊ดวานซ์', 'โกลด์', 'โกลบอล',
        'โกลเบิล', 'โซลาร์', 'โซลู', 'โซลูชั่น', 'โซลูชั่นส์', 'โซล่า','โซล่าร์', 'โดย ', 'โตเกียว', 'โตโยต้า', 'โตโยต้าเภสัช',
        'โบรกเกอร์', 'โบรคเกอร์', 'โบ๊ท', 'โปรดัก', 'โปรดักชั่น','โปรดักท์', 'โปรดักส์', 'โปรเกรส', 'โปรเจค', 'โปรเจคท์', 'โปรเจ็ค',
        'โปรเทคชั', 'โปรเฟสชั่นนอล', 'โปรเฟสชั่นแนล', 'โปรโมชั่น','โพรดักส์', 'โพรเกรส', 'โพลีเมอ', 'โพลีเมอร์', 'โมบาย', 'โมลด์',
        'โมเดิร์น', 'โรงรับจำนำ', 'โลจิส', 'โลจิสติก', 'โลจิสติกส์','โลจิสติคส์', 'โลหะกิจ', 'โฮ.*เต.?ล', 'โฮด', 'โฮม', 'โฮมส์', 'โฮล',
        'โฮลดิง', 'โฮลดิ้ง', 'โฮลดิ้งส์', 'โฮลเต็ล', 'โฮสด', 'โฮเต็ล','โฮเทล', 'ไซเอนซ์', 'ไทย', 'ไบโอ', 'ไบโอเทค', 'ไพรเวท', 'ไฟเบอร์',
        'ไฟแนน', 'ไมนิ่ง', 'ไลท์ติ้ง', 'ไลฟ์สไตล์', 'ไอที', 'ไฮดรอลิค','ไฮเทค','โปรเจก','จี เอ็ม บี เอช']

def search_byRegex(x,regex_list):
    regex_re = '|'.join(regex_list)
    try:
        out = True if re.search(regex_re, x.strip().upper()) else False
    except:
        out = x
    return out
    
def nameseer_string(nc,string):
    tagged = nc.classify_names_with_scores([str(string)])
    tag = tagged[0][0]
    tag_score = tagged[1][0]
    if tag == 'person':
        tag_person = tag_score
        tag_company = np.nan
    else:
        tag_company = tag_score
        tag_person = np.nan
        
    return [tag_company,tag_person]
    
def is_firm_eng(x):
    eng_pat = ['STREET','CREDIT','J\.P\.','UBS','GLOBAL','CITI','GROUP','GOLDMAN SACHS','DATA','BEST',
               'INVEST','CEIC','HOLD','MEGA','UNIT','ASIA','CAP','CORP','INTER','EAST','WEST','FORTUNE',
              'HK ','PACIFIC','RESEARCH','TECH','INC','GPH','PTE','FINAN','CLIENT','ENGINE','LC','GOUR','PRECISION',
              'ELEC','DEVELOP','PLAN','HOTEL','RESID','RESORT','PRIME','MOTOR','ENERG','SYST','SOLU','PENANG','INTL',
              'NOMINESS','INVES','&','TERMINAL','MANAGE','FOOD','SCB','LAND','CHEMI','ASSET','INDUS','HONGKONG',
              'ENTERPR','WORLD','COPO','BATT?ERY','ADVER','ART','GROWTH','SOCIE','MORGAN STAN','JP MORGAN','CREAT','SERVICE',
              'LIFE','MEDIA','METAL','THE ','PRIVATE','INTELI','MODERN','MEDICAL','TRADE','NILSEN','TOKYO','ATLANTIC','CONTAIN',
              'LIMITED','MARKET','PAY ','CO\.','AUTO','FUND','LTD','MINING','PRODUCT','POWER','PROPE','TRAVEL','DOTCOM',
              'SATELLITE','COMMUNICATION','ACCOM','JAPAN','COMPANY','BANK','TRUST','COSMETI','MED','CARE','NOMINE',
              'GREAT','COMPU','STRAT','RESOUR','CARPET']
    eng_pat_re = '|'.join(eng_pat)
    
    try:
        out = True if re.search(eng_pat_re, x.strip().upper()) else False
    except:
        out = x
        
    return out
   
@st.cache_data
def preprocess_byRegex(names_df,names_namecolname,ord_all_options,firm_all_options):
    ## exclude en names
    total_names = names_df.copy()
    #total_names.rename(columns = {names_namecolname:'name'},inplace = True)
    total_names['is_eng'] = [bool(re.search('^.?.?[A-Z]',str(x))) for x in total_names[names_namecolname]]
    #eng_names = total_names[[bool(re.search('^.?.?[A-Z]',str(x))) for x in total_names['name']]]
    eng_names = total_names.query('is_eng == True')
    total_names = anti_join(total_names,eng_names.filter([names_namecolname]))
    
    ## ord
    total_names['is_ordinary'] = total_names[names_namecolname].progress_apply(lambda name: search_byRegex(name,ord_all_options))
    regex_ord_df = total_names.query('is_ordinary == True')
    
    ## firm
    total_names = anti_join(total_names,regex_ord_df.filter([names_namecolname]))
    total_names['is_firm'] = total_names[names_namecolname].progress_apply(lambda name: search_byRegex(name,firm_all_options))
    regex_firm_df = total_names.query('is_firm == True')
    
    # wait to classify with Nameseer
    thai_names = anti_join(total_names,regex_firm_df.filter([names_namecolname]))
    
    ### classify eng names
    # ord
    #person_eng = eng_names[[bool(re.search("MR\\.|MRS\\.|MISS|MS\\.",str(x).upper().strip())) for x in eng_names['name']]]
    eng_names['is_ordinary_eng'] = eng_names[names_namecolname].apply(lambda x : bool(re.search("MR\\.|MRS\\.|MISS|MS\\.",str(x).upper().strip())))
    person_eng = eng_names.query('is_ordinary_eng == True')
    eng_names = anti_join(eng_names,person_eng.filter([names_namecolname]))
    
    eng_names['is_firm'] = eng_names[names_namecolname].progress_apply(is_firm_eng)
    firm_eng = eng_names.query('is_firm == True')
    
    person_eng2 = anti_join(eng_names,firm_eng.filter([names_namecolname]))
    
    ### classified eng
    classified_person_eng = pd.concat([person_eng.filter([names_namecolname]),
                                   person_eng2.filter([names_namecolname])]).reset_index(drop = True)
    classified_person_eng['Class'] = 'person_eng'

    classified_firm_eng = firm_eng.filter([names_namecolname]).reset_index(drop = True)
    classified_firm_eng['Class'] = 'firm_eng'
    
    # find by nameseer
    nc = NameClassifier.load_pretrained_model()
    tagged_results = thai_names.progress_apply(lambda row : nameseer_string(nc,row[names_namecolname]),axis = 1)
    thai_names[['tag_company','tag_person']] = pd.DataFrame({'tagged':tagged_results} )['tagged'].tolist()
    
    return thai_names,regex_ord_df,regex_firm_df,classified_person_eng,classified_firm_eng


@st.cache_data
def evaluation_mockup(names_df,names_namecolname):
    ord_answ_word = ['^.?.?นาย','^.?.?นาง','นางสาว','น\.ส\.',
                    'หม่อมหลวง','หม่อมราชวง','แพทย์หญิง','นายแพท','กองทุนส่วนบุคคุล',
            'ศาสตราจารย์','พ\\.ต\\.','พลอากาศเอก','^.?วท\\.ร\.','^.?น\\.ส','^.?เกตุ','โดยบมจ','^.?ส\\.ท\\.',
            '^.?.?(นาย|นาง)','กองทุนส่วนบุคคล','(นาย|นาง).*โดย','พลอากา',
            'นาย', 'นาง', '^.?น\\.ส\\', '^.?ว่าที่', '^.?พัน', '^.?MR\\.', '^.?เด็ก', '^.?พล\\.', '^.?คุณ', 
            '^.?ร้อย', '^.?จ่า', '^.?พ\\.ต', '^.?พ\\.อ', '^.?นาวา', '^.?น\\.พ', '^.?ด\\.ช', '^.?ด\\.ญ', '^.?ร\\.ต', '^.?พลเ', '^.?สิบ', 
            '^.?ร\\.อ', '^.?เรือ', '^.?จ\\.ส', '^.?พลต', '^.?ดร\\.', '^.?ม\\.ล', '^.?MRS', '^.?น\\.อ', '^.?MIS', '^.?พ\\.ท', '^.?ร\\.ท', 
            '^.?พ\\.ญ', '^.?ม\\.ร', '^.?พลโ', '^.?น\\.ต', '^.?น\\.ท', '^.?นพ\\.', 'รศ\\.', '^.?ส\\.ต', '^.?ด\\.ต', '^.?MS.', '^.?ผศ\\.',
            '^.?พลเอ','^.?ร้อยเอ','^.?ร้อยโ','^.?ร้อยตร','^.?คณะ', '^.?ส\\.อ', 'ทันตแพทย์', 'สาว', '^.?พ\\.จ', '^.?จ\\.อ\\.', 'ดาบ', 
            '^.?รอง ', '^.?ด็อกเตอร์', '^.?ผู้','แพทย์หญิง','MS\\.','MISS','MR\\.','^.?พลอากาศ']
        
    firm_answ_word = ['ศูนย์บริหาร','กิจการร่วมค้า','กิจการ','ประเทศไทย','อุตสาหกรรม', 'คอร์ปอเรชั่น', '^.?บจ\\.?','บ\\.','หจ\\.?','หจก\\.?',
                    '^.?หส\\.?','^.?หส\\.',
                    'บริษัท', 'จำกัด', 'บจก','มหาชน', 'บมจ', 'ทีม','บลจ','พีแอลซี','พีทีอี','โฮลดิง','ลิมิเต็ด','ลิมิเด็ด',
                    'หุ้น','อิงค์','อิงส์','ห้างหุ้นส่วนสามัญ','อินเตอร์เนชันแนล', 'อินเตอร์เนชั่นแนล','เทศบาล','บริษํท',
                    'เอ็นเตอร์ไพรส์', 'เอ็นเตอร์ไพรส์เซส', 'เอ็นเตอร์ไพร์ส','แอลซี', 'แอลทีดี','แอลเอซี','แอลแอลซี','นอมินี',
                    'จีเอ็มบีเอช','คัมปะนี','คัมพานี','คัมพะนี','คอร์ปอร์เรชั่น', 'คอร์ปอเรชั่น', 'คอร์ปอเรชั้น','คอร์ปอเรท', 'คอร์เปอร์เรชั่น', 'คอร์เปอเรชั่น',
                    'PTE','LLC' ,'INC','CO\\.',
                    'CO\\s', 'PUBLIC','PLC','ENTERPRISES','ENTERPRISE', 'THE','LTD', 'COMPANY', 'CORPORATION','LIMITED']

    nc = NameClassifier.load_pretrained_model()
    answ_tagged_results = names_df.progress_apply(lambda row : nameseer_string(nc,str(row[names_namecolname])),axis = 1)
    answ_df = names_df.copy()
    answ_df[['tag_company','tag_person']] = pd.DataFrame({'tagged':answ_tagged_results} )['tagged'].tolist()
    
    answ_df['is_indiv'] = answ_df[names_namecolname].progress_apply(lambda name : search_byRegex(name,ord_answ_word))
    answ_df['is_comp'] = answ_df[names_namecolname].progress_apply(lambda name : search_byRegex(name,firm_answ_word))
    
    indiv_answ = answ_df.query("tag_person >= 0.985 or is_indiv == True")
    comp_answ = answ_df.query("tag_company >= 0.975 or is_comp == True")
    indiv_answ = anti_join(indiv_answ,comp_answ.filter(['name']))

    cutoff = 0.005 # 0.5%
    if len(indiv_answ) > (cutoff * len(names_df)):
        indiv_answ = indiv_answ.copy()
    elif len(indiv_answ) > 5000000:
        indiv_answ = indiv_answ.sample(500000)
    else:
        indiv_answ = None

    if len(comp_answ) > (cutoff * len(names_df)):
        comp_answ = comp_answ.copy()
    elif len(indiv_answ) > 5000000:
        comp_answ = comp_answ.sample(500000)
    else:
        comp_answ = None

    return indiv_answ,comp_answ

