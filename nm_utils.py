import streamlit as st
import pandas as pd
import numpy as np
import copy
import os
import re
from tqdm import tqdm
import time
from rapidfuzz import fuzz
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity
from stqdm import stqdm

default_regex_list = ['\\s','\\.','\\(.*\\)','-',',','[',']']

soft_simp_words = ['CO', 'COMPANY', 'CORPORATION', 'CO\\.', 'CO\\s', 'ENTERPRISE',
    'ENTERPRISES', 'INC', 'INTERNATIONAL', 'LIMITED', 'LLC', 'LTD',
    'NOMINEE', 'NOMINEES', 'PLC', 'PTE', 'PUBLIC', 'THAILAND', 'THE',
    '^.?บจ\\.?', '^.?หส\\.?', '^บ', '^บ\\s', '^บจ', '^หจ', '^หส',
    'กิจการ', 'กิจการร่วมค้า', 'คอร์ปอร์เรชั่น', 'คอร์ปอเรชั่น',
    'คอร์ปอเรชั้น', 'คอร์ปอเรท', 'คอร์เปอร์เรชั่น', 'คอร์เปอเรชั่น',
    'คัมปะนี', 'คัมพะนี', 'คัมพานี', 'จำกัด', 'จีเอ็มบีเอช', 'ทีม',
    'นอมินี', 'บ\\.', 'บจก', 'บมจ', 'บริษัท', 'บริษํท', 'บลจ',
    'ประเทศไทย', 'พีทีวาย', 'พีทีอี', 'พีแอลซี', 'มหาชน', 'ลิมิเด็ด',
    'ลิมิเต็ด', 'ศูนย์บริหาร', 'หจ\\.?', 'หจก', 'หจก\\.?', 'หส\\.',
    'หุ้น', 'ห้างหุ้นส่วนสามัญ', 'อิงค์', 'อิงส์', 'อินเตอร์เนชันแนล',
    'อินเตอร์เนชั่นแนล', 'อุตสาหกรรม', 'เทศบาล', 'เอ็นเตอร์ไพรส์',
    'เอ็นเตอร์ไพรส์เซส', 'เอ็นเตอร์ไพร์ส', 'แอลซี', 'แอลทีดี',
    'แอลเอซี', 'แอลแอลซี', 'โฮลดิง', 'โฮลดิ้ง']

hard_simp_words = ['(กรุงเทพ)', '(ประเทศไทย)', '(มหาชน)', '(เอเชีย)', '(ไทย)',
    '(ไทยแลนด์)', 'BANK', 'BHD', 'CO.', 'COPO', 'CORP', 'CO\\.','FUND', 'GLOBAL', 'GPH', 'LC', 'LIMITED',
    'LLC', 'LTD', 'NOMINEES','PTE', 'SDN', 'SECURITIES', 'SINGAPORE', 'กฎหมาย', 'กราฟฟิค','กรีน', 'กรุ๊ป', 
    'กลาส', 'กลุ่ม', 'กอ.*ท.?น', 'กองทุน', 'กอล์ฟ','การก่อสร้าง', 'การค้า', 'การช่าง', 'การบัญชี', 'การพิมพ์',
    'การาจ', 'การเกษตร', 'การโยธา', 'การไฟฟ้า', 'การ์ด', 'การ์เด้น','การ์เด้นท์', 'การ์เมนท์', 'การ์เม้นท์', 'กู๊ด', 'ก่อสร้าง',
    'ขนส่ง', 'ครอป', 'คราฟท์', 'ครีเอชั่น', 'ครีเอท', 'ครีเอทีฟ','คลับ', 'คลาวด์', 'คลินิก', 'คลีน', 'คลีนนิ่ง', 'ควอลิตี้','คอน.*ซัล',
    'คอนกรีต', 'คอนซัลติ้ง', 'คอนซัลท์', 'คอนซัลแตนท์','คอนซัลแทนซี่', 'คอนซัลแทนต์', 'คอนซัลแทนท์', 'คอนซัลแทนส์',
    'คอนวีเนี่ยนสโตร์', 'คอนสตรัค', 'คอนสตรัคชั่น', 'คอนสตรั๊คชั่น','คอนสทรัคชั่น', 'คอนเทนเนอร์', 'คอนเนคชั่น', 'คอนเน็คชั่น',
    'คอนแทรคเตอร์', 'คอนโด', 'คอนโดมิเนียม', 'คอนโทรล', 'คอฟฟี่','คอม.*นี', 'คอมปะ', 'คอมปะนี', 'คอมปา', 'คอมพิวเตอร์',
    'คอมมิวนิเคชั่น', 'คอมมูนิเคชั่น', 'คอมเพล็กซ์', 'คอมเมอร์เชียล','คอมเมิร์ซ', 'คอมโพ', 'คอร์ป', 'คอร์ปอร์เรชั่น', 'คอร์ปอเรชั่น',
    'คอร์ปอเรชั้น', 'คอร์ปอเรท', 'คอร์เปอร์เรชั่น', 'คอร์เปอเรชั่น','คอลเลคชั่น', 'คอสเมติก', 'คอสเมติกส์', 'คัมปะนี', 'คัมพานี',
    'คัมพานีแมเนจ', 'คัลเลอร์', 'คาร์', 'คาร์เร้นท์', 'คาร์โก้','คาเฟ่', 'คิทเช่น', 'ค้าวัสดุ', 'ค้าไม้', 'จัดหางาน', 'จำกัด',
    'จิวเวลรี่', 'จิเอ็มบีเอช', 'จี เอ็ม บี เอชนอมีนี', 'จีเอ็มบีเอช','ชิปปิ้ง', 'ช็อป', 'ซอฟต์แวร์', 'ซอฟท์แวร์', 'ซัคเซส', 'ซัพพลาย',
    'ซัพพลายส์', 'ซัพพลายเออร์', 'ซัพพอร์ต', 'ซัพพอร์ท', 'ซาวด์','ซิตี้', 'ซิลเวอร์', 'ซิสเต.*ม', 'ซิสเต็ม', 'ซิสเต็มส์', 'ซิสเทม',
    'ซิสเท็ม', 'ซิสเท็มส์', 'ซีฟู้ด', 'ซีวิล', 'ซีสเต็ม','ซีเคียวริตี้', 'ซึ่งจดทะเบียนแล้ว', 'ซุปเปอร์', 'ซุปเปอร์โปร',
    'ดอท', 'ดาต้า', 'ดิจิตอล', 'ดิจิทัล', 'ดิสทริบิวชั่น','ดิสทริบิวเตอร์', 'ดิเวลลอปเม้นท์', 'ดีซายน์', 'ดีเวลลอป',
    'ดีเวลลอปเมนท์', 'ดีเวลลอปเม้นท์', 'ดีเวลล็อปเม้นท์','ดีเวลอปเมนท์', 'ดีเวลอปเม้นท์', 'ดีไซน์', 'ทนายความ', 'ทรัพย์ทวี',
    'ทรานสปอ', 'ทรานสปอร์ต', 'ทรานสปอร์ท', 'ทรานส์', 'ทราฟฟิค','ทราเวล', 'ทราเวิล', 'ทะเบียน', 'ทัวร์', 'ทาวเวอร์', 'ทิสโก้',
    'ทีม', 'ทูลลิ่ง', 'ทูลส', 'ทูลส์', 'ธุรกิจ', 'นอมีนี','นำคนต่างด้าวมาทำงานในประเทศ', 'นิตติ้ง', 'นิปปอน', 'บจ',
    'บจ\\.บริษัท', 'บจก', 'บมจ', 'บมจ\\.บริษัท', 'บรรจุภัณฑ์','บริการ', 'บริษัท', 'บริษํท', 'บลจ', 'บางกอก', 'บาร์', 'บิซิเนส',
    'บิลดิ้ง', 'บิลเดอร์', 'บิวดิ้ง', 'บิวตี้', 'บิวเดอร์', 'บิสซิเนส','บิสสิเนส', 'บิสิเนส', 'บี.วี', 'บี\\.วี', 'บี\\.วีกลุ่ม', 'บีช',
    'บีเอชดี', 'บ้าน', 'ปักกิ่ง', 'ปาร์ค', 'ปาล์ม', 'ปิโตรเลียม','ปิโตรเลี่ยม', 'พรอพเพอร์ตี้', 'พริ้นติ้ง', 'พริ้นท์', 'พรีซิชั่น',
    'พร็อพ', 'พร็อพเพอร์ตี้', 'พร็อพเพอร์ตี้ส์', 'พร๊อพเพอร์ตี้','พลัส', 'พลาซ่า', 'พลาสติก', 'พัฒนา', 'พัฒนาอิสลาม', 'พับลิชชิ่ง',
    'พาณิชย์', 'พาราวู้ด', 'พาราไดซ์', 'พาร์ค', 'พาร์ท', 'พาร์ทเนอ','พาร์ทเนอร์', 'พาร์ทเนอร์ส', 'พาวเวอร์', 'พีทีวาย', 'พีทีอี',
    'พีแอลซี', 'ฟรุ๊ต', 'ฟอร์เวิร์ด', 'ฟาร์ม', 'ฟาร์มา', 'ฟิตเนส','ฟิล์ม', 'ฟูดส์', 'ฟู้ด', 'ฟู้ดส์', 'ฟู๊ด', 'ฟู๊ดส์', 'มอเตอ',
    'มอเตอร์', 'มันนี่', 'มัลติมีเดีย', 'มา.*เกต', 'มาร์ท', 'มาร์เก็ต','มาร์เก็ตติ้ง', 'มาสเตอร์', 'มิวสิค', 'มิสเตอร์', 'มีเดีย',
    'มุลนิธิ', 'มุลนิธิจีเอ็มบีเอช', 'มูลนิธิ', 'ยูนิเวอร์แซล','ยูเนี่ยน', 'ยูไนเต็ด', 'รักษาความปลอดภัย', 'รับเบอร์',
    'รีซอร์สเซส', 'รีสอร์ท', 'รีเทล', 'รีเสิร์ช', 'รีไซเคิล', 'ร้าน','ลอนดรี้', 'ลอว์', 'ลิงค์', 'ลิซซิ่ง', 'ลิฟวิ่ง', 'ลิมิเด็ด',
    'ลิมิเต็ด', 'ลิสซิ่ง', 'ลีดเดอร์', 'ลีฟวิ่ง', 'ลีสซิ่ง', 'วอเตอร์','วัสดุก่อสร้าง', 'วัสดุภัณฑ์', 'วิชั่น', 'วิลล่า', 'วิลล่าส์',
    'วิลเลจ', 'วิศวกรรม', 'วู้ด', 'วู๊ด', 'ส\\.', 'สกิน', 'สตีล','สตูดิโอ', 'สถาปนิก', 'สปอร์ต', 'สปา', 'สมาคม', 'สมาร์ท', 'สยาม',
    'สยาม ', 'สำนักกฎหมาย', 'สำนักงาน', 'สเตชั่น', 'สเตนเลส', 'สเปซ','สแควร์', 'สแตนดาร์ด', 'สแตนเลส', 'สโตน', 'สโตร์', 'สไตล์', 'หจ',
    'หจ\\.', 'หจ\\.ห้างหุ้นส่วนจำกัด', 'หมู่', 'หลักทรัพ', 'หส\\.','หส\\.ห้างหุ้นส่วนสามัญ', 'หุ้น', 'ห้าง', 'ห้างทอง',
    'ห้างทองเยาวราช', 'ห้างหุ้นส่วนจำกัด', 'ห้างหุ้นส่วนสามัญ','อพาร์ทเมนท์', 'อพาร์ทเม้นท์', 'อลูมินั่ม', 'อลูมิเนียม', 'ออดิท',
    'ออดิทติ้ง', 'ออดิโอ', 'ออนไลน์', 'ออฟฟิศ', 'ออยล์', 'ออร์แกนิค','ออโต', 'ออโตเมชั่น', 'ออโตโมทีฟ', 'ออโตโมบิล', 'ออโต้',
    'ออโต้คาร์', 'ออโต้พาร์ท', 'ออโต้เซอร์วิส', 'อะโกร', 'อะไหล่ยนต์','อันดามัน', 'อาร์คิเทค', 'อาร์ต', 'อาร์ท', 'อิควิปเม้นท์', 'อิงค์',
    'อิงส์', 'อินชัวรันส์', 'อินดัสตรี', 'อินดัสตรีส์', 'อินดัสตรี้','อินดัสทรี', 'อินดัสทรีส์', 'อินดัสทรี่', 'อินดัสเตรียล',
    'อินดัสเทรียล', 'อินทิเกรชั่น', 'อินทีเรีย', 'อินฟอร์เมชั่น','อินสไปร์', 'อินเตอ', 'อินเตอร์', 'อินเตอร์กรุ๊ป', 'อินเตอร์ฟู้ด',
    'อินเตอร์เทค', 'อินเตอร์เทรด', 'อินเตอร์เทรดดิ้ง','อินเตอร์เนชันแนล', 'อินเตอร์เนชั่นแนล', 'อินเทลลิเจนท์', 'อินเวส',
    'อินโนเทค', 'อินโนเวชั่น', 'อินโนเวทีฟ', 'อิมปอร์ต','อิมปอร์ต-เอ็กซ์ปอร์ต', 'อิมพอร์ต', 'อิมพอร์ท', 'อิมเมจ',
    'อิเลคทริค', 'อิเล็กทรอนิกส์', 'อิเล็คทริค', 'อิ้งค์','อีควิปเมนท์', 'อีควิปเม้นท์', 'อีสเทิร์น', 'อีเนอจี้',
    'อีเลคทริค', 'อีเล็คทริค', 'อีเว้นท์', 'อุตสาหกรรม', 'อโกร','ฮอนดา', 'ฮอนด้า', 'ฮับ', 'ฮาร์ดแวร์', 'ฮ่องกง', 'เคมิคอล',
    'เคมิคัล', 'เคมีคอล', 'เครน', 'เจนเนอรัล', 'เจริญยนต์', 'เจเนอรัล','เจแปน', 'เซนเตอร์', 'เซฟตี้', 'เซรามิค', 'เซล', 'เซลล์', 'เซลส์',
    'เซอ.*วิส', 'เซอร์วิส', 'เซอร์วิสเซส', 'เซอร์เวย์', 'เซิร์ฟ','เซเว่น', 'เซ็นทรัล', 'เซ็นเตอ', 'เซ็นเตอร์', 'เดคคอร์',
    'เดคคอเรชั่น', 'เดคอร์', 'เดอะ', 'เทค', 'เทคนิ', 'เทคนิค','เทคนิคอล', 'เทคโน', 'เทคโนโลยี', 'เทคโนโลยีส์', 'เทคโนโลยี่',
    'เทรด', 'เทรดดิ้ง', 'เทรนนิ่ง', 'เทศบาล', 'เทเลคอม', 'เนเจอร์','เนเชอรัล', 'เน็ตเวิร์ค', 'เน็ทเวิร์ค', 'เบฟเวอเรจ', 'เบย์',
    'เบอเกอ', 'เบเกอรี', 'เบเกอรี่', 'เปเปอร์', 'เพลส', 'เพาเวอร์','เพ็ท', 'เพ้นท์', 'เฟรช', 'เฟอร์นิเจอร์', 'เภสัช', 'เมคเกอร์',
    'เมดดิคอล', 'เมดิคอล', 'เมททอล', 'เมทัล', 'เมทัลชีท','เมนเทนแนนซ์', 'เมอร์ชั่น', 'เมเนจเมนท์', 'เมเนจเม้นท์', 'เยาวราช',
    'เรดิโอ', 'เรสซิเดนซ์', 'เรสซิเด้นซ์', 'เรสเตอรองท์', 'เรียล','เรียลเอสเตท', 'เลิร์นนิ่ง', 'เลเซอร์', 'เวนเจอ', 'เวนเจอร์',
    'เวนเจอร์ส', 'เวลดิ้ง', 'เวลท์', 'เวลธ์', 'เวลเนส', 'เวิร์ค','เวิลด์', 'เวิลด์ไวด์', 'เอ.*จิเนีย', 'เอ.*เตอ', 'เอนจิเนียริ่ง',
    'เอนเตอร์ไพรส์', 'เอนเนอ', 'เอนเนอร์จี', 'เอนเนอร์ยี่','เอสดีเอ็น', 'เอสเตท', 'เอเจนซี่', 'เอเชีย', 'เอเซีย',
    'เอเซียNOMINEES','NOMINEES', 'เอเนเจีย', 'เอเยนซี่', 'เอ็กซ์ปอร์ต','เอ็กซ์พอร์ต', 'เอ็กซ์พอร์ท', 'เอ็กซ์เชนจ์', 'เอ็กซ์เพรส',
    'เอ็กซ์เพิร์ท', 'เอ็ดดูเคชั่น', 'เอ็นจิเนีย', 'เอ็นจิเนียริ่ง','เอ็นจิเนียร์', 'เอ็นจิเนียร์ริ่ง', 'เอ็นจีเนียริ่ง',
    'เอ็นเตอร์เทนเมนท์', 'เอ็นเตอร์เทนเม้นท์', 'เอ็นเตอร์ไพรซ์','เอ็นเตอร์ไพรส์', 'เอ็นเตอร์ไพรส์เซส', 'เอ็นเตอร์ไพร์ส', 'เอ็นเนอ',
    'เอ็นเนอร์จี', 'เอ็นเนอร์ยี', 'เอ็นเนอร์ยี่', 'เอ็ม\\.บี','เอ็มบี', 'เอ็มบีเอช', 'เอ็มไพร์', 'เฮลตี้', 'เฮลท์', 'เฮลท์ตี้',
    'เฮลท์แคร์', 'เฮลธ์', 'เฮอริเทจ', 'เฮาส', 'เฮาส์', 'เฮิร์บ','เฮ้าส์', 'เฮ้าส์ซิ่ง', 'แกลเลอรี่', 'แก๊ส', 'แค(บ|ป).*ตอล',
    'แคปปิตอล', 'แคร์', 'แทรคเตอร์', 'แทรเวล', 'แทรเวิล', 'แบรนด์','แปซิฟิก', 'แปซิฟิค', 'แพคเกจจิ้ง', 'แพลนท์', 'แพลนนิ่ง',
    'แพลนเนอร์', 'แพ็คกิ้ง', 'แพ็คเกจจิ้ง', 'แฟคตอรี่', 'แฟคทอรี่','แฟชั่น', 'แฟบริค', 'แฟมิลี่', 'แมชชินเนอรี่', 'แมชชีน',
    'แมชชีนเนอรี่', 'แมทที', 'แมททีเรียล', 'แมนชั่น', 'แมนู','แมนูแฟคเจอริ่ง', 'แมนเนจเมนท์', 'แมนเนจเม้นท์', 'แมเนจ',
    'แมเนจเมนท์', 'แมเนจเม้นท์', 'แลนด์', 'แลนด์สเคป', 'แลป', 'แล็บ','แอ.*เซท', 'แอคเคาท์', 'แอคเคาท์ติ้ง', 'แอคเคาน์ติ้ง', 'แอดวานซ์',
    'แอดเวอร์ไทซิ่ง', 'แอดไวซอรี่', 'แอดไวซ์', 'แอดไวเซอรี่', 'แอนด์','แอพพาเรล', 'แอร์', 'แอล.*พี', 'แอล.+ซี', 'แอลซี', 'แอลทีดี',
    'แอลพีจี', 'แอลเอซี', 'แอลแอลซี', 'แอสเซท', 'แอสเซ็ท', 'แอสเสท','แอสโซซิเอท', 'แอสโซซิเอทส์', 'แอ๊ดวานซ์', 'โกลด์', 'โกลบอล',
    'โกลเบิล', 'โซลาร์', 'โซลู', 'โซลูชั่น', 'โซลูชั่นส์', 'โซล่า','โซล่าร์', 'โดย ', 'โตเกียว', 'โตโยต้า', 'โตโยต้าเภสัช',
    'โบรกเกอร์', 'โบรคเกอร์', 'โบ๊ท', 'โปรดัก', 'โปรดักชั่น','โปรดักท์', 'โปรดักส์', 'โปรเกรส', 'โปรเจค', 'โปรเจคท์', 'โปรเจ็ค',
    'โปรเทคชั', 'โปรเฟสชั่นนอล', 'โปรเฟสชั่นแนล', 'โปรโมชั่น','โพรดักส์', 'โพรเกรส', 'โพลีเมอ', 'โพลีเมอร์', 'โมบาย', 'โมลด์',
    'โมเดิร์น', 'โรงรับจำนำ', 'โลจิส', 'โลจิสติก', 'โลจิสติกส์','โลจิสติคส์', 'โลหะกิจ', 'โฮ.*เต.?ล', 'โฮด', 'โฮม', 'โฮมส์', 'โฮล',
    'โฮลดิง', 'โฮลดิ้ง', 'โฮลดิ้งส์', 'โฮลเต็ล', 'โฮสด', 'โฮเต็ล','โฮเทล', 'ไซเอนซ์', 'ไทย', 'ไบโอ', 'ไบโอเทค', 'ไพรเวท', 'ไฟเบอร์',
    'ไฟแนน', 'ไมนิ่ง', 'ไลท์ติ้ง', 'ไลฟ์สไตล์', 'ไอที', 'ไฮดรอลิค','ไฮเทค']


def simplify_name(x,regex_list):
    regex_list_re = '|'.join(regex_list)
    x1 = x.strip().upper()
    x2 = re.sub(regex_list_re,'',x1)
    return x2 if len(x2)>0 else x1

@st.cache_data(ttl=3600)
def text_preprocess_byRegex(df_query,query_colname,df_corpus,corpus_colname,regex_list):
    query_name = df_query[query_colname].progress_apply(lambda name : simplify_name(name,regex_list)).values
    corpus_name = df_corpus[corpus_colname].progress_apply(lambda name : simplify_name(name,regex_list)).values
    return query_name,corpus_name

@st.cache_data
def wrap_up_material(df_query,df_corpus,query_names,corpus_names):
    df1 = df_query.copy(deep = True)
    df1['query_name'] = query_names
    df2 = df_corpus.copy(deep = True)
    df2['corpus_name'] = corpus_names
    return df1,df2

def dna(x):
    if len(x)<3:
        return x
    return '|'.join([i+j+k for i,j,k in zip(x, x[1:], x[2:])])

@st.cache_data
def extract_NM(df_query,query_names,query_colname,
               df_corpus,corpus_names,corpus_colname,
               threshold = 0.5,top_n = 3):

    max_features = 50000
    tf_vectorizer = TfidfVectorizer(max_features = max_features, tokenizer = lambda s : s.split('|'))
    corpus_tfidf_matrix = tf_vectorizer.fit_transform(corpus_names.apply(dna))
    query_tfidf_matrix = tf_vectorizer.transform(query_names.apply(dna))
    
    # Define batch size
    batch_size = 1000

    upper = st.container()
    lower = st.container()
    with upper:
        # Calculate cosine similarity in batches
        prep_cal_c = lower.empty()
        prep_cal_c.info('Calculate TF-IDF Cosine Similarity')
        dic = {}
        for q_start in stqdm(range(0, query_tfidf_matrix.shape[0], batch_size)):
            q_end = min(q_start + batch_size, query_tfidf_matrix.shape[0])
            for doc_idx in range(q_start,q_end):
                dic[doc_idx] = []
            for start in range(0, corpus_tfidf_matrix.shape[0], batch_size):
                end = min(start + batch_size, corpus_tfidf_matrix.shape[0])
                sim_matrix = cosine_similarity(corpus_tfidf_matrix[start:end], query_tfidf_matrix[q_start:q_end])
                
                max_indices = np.argmax(sim_matrix, axis=0) # max sim per each batch
                refer_max_indices = max_indices + start
                for query_idx in range(sim_matrix.shape[1]):
                    max_score = sim_matrix[max_indices[query_idx], query_idx]
                    if max_score > threshold:
                        dic[query_idx + q_start].append((refer_max_indices[query_idx], max_score))
                    dic[query_idx + q_start]= sorted(dic[query_idx + q_start], key=lambda i: i[1], reverse=True)
        prep_cal_c.empty()

        prep_retrieve = lower.empty()
        prep_retrieve.info('Prepare')
        retrieve_matched = pd.DataFrame([[dic[idx][0:top_n] for idx in stqdm(dic)]]).transpose().reset_index()
        prep_retrieve.empty()

        retrieve_matched.columns = ['query_index','tfidf_matched']
        retrieve_matched = retrieve_matched.explode('tfidf_matched').dropna()
        retrieve_matched[['corpus_index','tfidf_score']] = pd.DataFrame(retrieve_matched['tfidf_matched'].tolist(),index = retrieve_matched.index)


        matched_df = retrieve_matched.merge(df_query.filter(['query_index','query_name',query_colname]),on = 'query_index').\
                merge(df_corpus.filter(['corpus_index','corpus_name',corpus_colname]),on = 'corpus_index')
        s_col = ['query_name','corpus_name','tfidf_score',query_colname,corpus_colname]
        matched_df = matched_df.filter(s_col)

    matched_df['tfidf_score'] = np.round(matched_df['tfidf_score'] * 100,1)
    matched_df['fuzzy_ratio'] = matched_df.apply(lambda row : np.round(fuzz.ratio(row['query_name'],row['corpus_name']),1),axis = 1)
    matched_df['fuzzy_partialratio'] = matched_df.apply(lambda row : np.round(fuzz.partial_ratio(row['query_name'],row['corpus_name']),1),axis = 1)
    s_col  = ['query_name','corpus_name','tfidf_score','fuzzy_ratio','fuzzy_partialratio',query_colname,corpus_colname]
    matched_df = matched_df.filter(s_col)    
    return matched_df
